// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Architect {
  id                   Int                    @id @unique @default(autoincrement()) @db.UnsignedInt
  name                 String                 @db.VarChar(255)
  last_name            String                 @db.VarChar(255)
  dateOf_birth         DateTime               @db.Date()
  nationality_id       Nationality            @relation(fields: [id_nationality], references: [id])
  id_nationality       Int                    @db.UnsignedInt
  studio_id            Studio                 @relation(fields: [id_studio], references: [id])
  id_studio            Int                    @db.UnsignedInt
  //id_previous_studios Int
  //id_contact
  location_id          Location               @relation(fields: [location], references: [id])
  location             Int                    @db.UnsignedInt
  signed_up            Boolean                @default(false)
  signed_in            Boolean                @default(false)
  typeOf_subscription  Int                    @db.UnsignedInt
  ArchitectsOnProjects ArchitectsOnProjects[]
}

model ArchitectsOnProjects {
  projects_id   Projects  @relation(fields: [id_projects], references: [id])
  id_projects   Int       @db.UnsignedInt
  architects_id Architect @relation(fields: [id_architects], references: [id])
  id_architects Int       @db.UnsignedInt

  @@id([id_projects, id_architects])
}

model Projects {
  id                   Int                    @id @unique @default(autoincrement()) @db.UnsignedInt
  name                 String                 @db.VarChar(255)
  //id_clients Int @relation(map: "Architect", id)
  studio_id            Studio                 @relation(fields: [id_studio], references: [id])
  id_studio            Int                    @db.UnsignedInt
  //id_typeOf_project Int @relation()
  //id_stateOf_project Int @relation()
  plot                 Plot                   @relation(fields: [id_plot], references: [id])
  id_plot              Int                    @unique @db.UnsignedInt
  yearOf_start         Int                    @db.Year
  yearOf_finish        Int                    @db.Year
  ArchitectsOnProjects ArchitectsOnProjects[]
}

model User {
  id                  Int      @id @unique @default(autoincrement()) @db.UnsignedInt
  email               String   @unique @db.VarChar(255)
  password            String   @db.VarChar(255)
  name                String   @db.VarChar(255)
  last_name           String   @db.VarChar(255)
  phone_number        Int      @unique @db.UnsignedInt
  location_id         Location @relation(fields: [location], references: [id])
  location            Int      @db.UnsignedInt
  is_architect        Boolean  @default(false)
  is_client           Boolean  @default(false)
  //projects
  typeOf_subscription Int      @default(0) @db.UnsignedInt
}

model Studio {
  id          Int         @id @unique @default(autoincrement()) @db.UnsignedInt
  name        String      @db.VarChar(255)
  location_id Location    @relation(fields: [location], references: [id])
  location    Int         @db.UnsignedInt
  Architect   Architect[]
  Projects    Projects[]
}

model Plot {
  id                  Int                    @id @unique @default(autoincrement()) @db.UnsignedInt
  cadastral_reference String                 @unique @db.VarChar(20)
  location            Unsupported("polygon")
  surface             Int                    @db.UnsignedInt
  occupation          Int
  project             Projects?
}

model Nationality {
  id        Int         @id @unique @default(autoincrement()) @db.UnsignedInt
  country   String      @db.VarChar(255)
  Architect Architect[]
}

model Location {
  id        Int         @id @unique @default(autoincrement()) @db.UnsignedInt
  city      String
  User      User[]
  Architect Architect[]
  Studio    Studio[]
}
